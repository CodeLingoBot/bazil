// Code generated by protoc-gen-go.
// source: bazil.org/bazil/fs/snap/wire/snap.proto
// DO NOT EDIT!

/*
Package wire is a generated protocol buffer package.

It is generated from these files:
	bazil.org/bazil/fs/snap/wire/snap.proto

It has these top-level messages:
	Dirent
	File
	Dir
	Snapshot
*/
package wire

import proto "github.com/golang/protobuf/proto"
import bazil_cas "bazil.org/bazil/cas/wire"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Dirent struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	File *File  `protobuf:"bytes,2,opt,name=file" json:"file,omitempty"`
	Dir  *Dir   `protobuf:"bytes,3,opt,name=dir" json:"dir,omitempty"`
}

func (m *Dirent) Reset()         { *m = Dirent{} }
func (m *Dirent) String() string { return proto.CompactTextString(m) }
func (*Dirent) ProtoMessage()    {}

func (m *Dirent) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Dirent) GetDir() *Dir {
	if m != nil {
		return m.Dir
	}
	return nil
}

type File struct {
	Manifest *bazil_cas.Manifest `protobuf:"bytes,1,opt,name=manifest" json:"manifest,omitempty"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}

func (m *File) GetManifest() *bazil_cas.Manifest {
	if m != nil {
		return m.Manifest
	}
	return nil
}

type Dir struct {
	Manifest *bazil_cas.Manifest `protobuf:"bytes,1,opt,name=manifest" json:"manifest,omitempty"`
	// If >0, the direntries are guaranteed to be aligned at
	// 1<<(12+align-1) byte boundaries (that is, minimum alignment is
	// 4kB).
	//
	// Required, with value 0 reserved for disabled, to avoid pointer
	// indirection costs for a few bytes.
	Align uint32 `protobuf:"varint,2,opt,name=align" json:"align,omitempty"`
}

func (m *Dir) Reset()         { *m = Dir{} }
func (m *Dir) String() string { return proto.CompactTextString(m) }
func (*Dir) ProtoMessage()    {}

func (m *Dir) GetManifest() *bazil_cas.Manifest {
	if m != nil {
		return m.Manifest
	}
	return nil
}

// Snapshot as it is stored into CAS.
type Snapshot struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Contents *Dir   `protobuf:"bytes,2,opt,name=contents" json:"contents,omitempty"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}

func (m *Snapshot) GetContents() *Dir {
	if m != nil {
		return m.Contents
	}
	return nil
}

func init() {
}
